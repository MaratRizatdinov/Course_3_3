{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;;AAAA;;AAEO,2BAA2B,gBAAgB;AAClD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;;AAEO,0BAA0B,gBAAgB;AACjD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,yBAAyB;AACzB;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA,6BAA6B,cAAc;AAC3C;AACA,qDAAqD,MAAM;AAC3D,UAAU;AACV;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;;AAEA,6BAA6B,cAAc;AAC3C;AACA,qDAAqD,MAAM;AAC3D,UAAU;AACV;;AAEA;AACA,KAAK;AACL;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,qDAAqD,UAAU;AAC/D,uCAAuC;AACvC,yCAAyC,OAAO;;AAEhD,4BAA4B;AAC5B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA,mCAAmC,kBAAkB;AACrD;AACA;AACA,mCAAmC;AACnC;AACA,2BAA2B;AAC3B;AACA;AACA,mCAAmC,kBAAkB;AACrD;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACtMA;AACA;;AAEO,sCAAsC,aAAa;AAC1D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;;;;;;UCtCA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;ACN8D;AACN;AACxD;AACA;AACA;;AAEA;;AAEA,2DAAe,GAAG,gBAAgB;;AAElC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,IAAI,qEAA0B,GAAG,aAAa;;AAE9C,IAAI,0DAAc,GAAG,gBAAgB;AACrC,CAAC","sources":["webpack://course_3/./render.js","webpack://course_3/./tools.js","webpack://course_3/webpack/bootstrap","webpack://course_3/webpack/runtime/define property getters","webpack://course_3/webpack/runtime/hasOwnProperty shorthand","webpack://course_3/webpack/runtime/make namespace object","webpack://course_3/./index.js"],"sourcesContent":["//----Стартовая страница----\n\nexport function renderStartPage({ contentElement }) {\n    window.localStorage.removeItem(\"level\");\n    window.localStorage.removeItem(\"gameCardCollection\");\n\n    let selectPageContent = `<div class=\"select__container\">\n                            <div class=\"select__title\">Выбери сложность</div>\n                            <div class=\"select__levelsbox\">\n                                <div class =\"select__levelbutton\">1</div>\n                                <div class=\"select__levelbutton\">2</div>\n                                <div class=\"select__levelbutton\">3</div>\n                            </div>     \n                            <div class=\"select__startbutton  global__button global__button--disabled\">Старт</div>       \n                        </div>`;\n    contentElement.innerHTML = selectPageContent;\n\n    let buttonElements = document.querySelectorAll(\".select__levelbutton\");\n    let startButton = document.querySelector(\".select__startbutton\");\n    startButton.disabled = true;\n\n    for (let key of buttonElements) {\n        key.addEventListener(\"click\", () => {\n            for (let key of buttonElements) {\n                key.classList.remove(\"select__levelbutton--active\");\n            }\n            key.classList.add(\"select__levelbutton--active\");\n            window.localStorage.setItem(\"level\", key.textContent);\n            startButton.disabled = false;\n            startButton.classList.remove(\"global__button--disabled\");\n        });\n    }\n}\n\n//----Страница-загрузка игры----\n\nexport function renderGamePage({ contentElement }) {\n    let gamePageItems = ``;\n    let fullGamePageItems = ``;\n    let gamePageContent = \"\";\n    let level;\n    let cardShirt = \"close\";\n\n    let gameCards = JSON.parse(\n        window.localStorage.getItem(\"gameCardCollection\")\n    );\n\n    let fullGameCards = JSON.parse(\n        window.localStorage.getItem(\"fullCardCollection\")\n    );\n    let headerElement = `<div class=\"header__container\">\n                            <div class=\"header__timerfield\">\n                                <div class=\"header__timertitle\">\n                                    <div class=\"header__timernamemin\">min</div>\n                                    <div class=\"header__timernamesec\">sec</div>\n                                </div>\n                                <div class=\"header__timerclock\">\n                                    <div class=\"header__timercounter header__timercounter--decimin\">0</div>\n                                    <div class=\"header__timercounter header__timercounter--min\">0</div>\n                                    <div class=\"header__timercounter header__timercounter--point\">.</div>\n                                    <div class=\"header__timercounter header__timercounter--decisec\">0</div>\n                                    <div class=\"header__timercounter header__timercounter--sec\">0</div>\n                                </div>\n                            </div>\n                            <div class=\"header__button global__button\">Начать заново</div>\n                          </div>`;\n\n    if (gameCards.length === 6) level = \"easy\";\n    if (gameCards.length === 12) level = \"medium\";\n    if (gameCards.length === 18) level = \"hard\";\n\n    // Первоначально показывем полную колоду (закрытую)\n\n    gamePageContent = `${headerElement}\n        \n    <div class = \"card__container card__container--full center\">\n        ${getRenderElement(\n            fullGamePageItems,\n            fullGameCards,\n            cardPicture,\n            cardShirt\n        )}\n    </div>`;\n\n    contentElement.innerHTML = gamePageContent;\n\n    // По истечении указанного времени показываем полную колоду(открытую)\n\n    setTimeout(() => {\n        cardShirt = \"open\";\n        gamePageContent = `${headerElement}\n        \n    <div class = \"card__container card__container--full center\">\n        ${getRenderElement(\n            fullGamePageItems,\n            fullGameCards,\n            cardPicture,\n            cardShirt\n        )}\n    </div>`;\n\n        contentElement.innerHTML = gamePageContent;\n    }, 2000);\n\n    // По истечении указанного времени показываем игровую колоду(открытую)\n\n    setTimeout(() => {\n        gamePageContent = `${headerElement}+\n            \n    <div class = \"card__container card__container--${level}\">\n        ${getRenderElement(gamePageItems, gameCards, cardPicture, cardShirt)}\n    </div>`;\n\n        contentElement.innerHTML = gamePageContent;\n    }, 4000);\n\n    // По истечении указанного времени показываем игровую колоду(закрытую)\n\n    setTimeout(() => {\n        cardShirt = \"close\";\n\n        gamePageContent = `${headerElement}+\n            \n    <div class = \"card__container card__container--${level}\">\n        ${getRenderElement(gamePageItems, gameCards, cardPicture, cardShirt)}\n    </div>`;\n\n        contentElement.innerHTML = gamePageContent;\n    }, 6000);\n}\n\n// ----Ниже находятся вспомогательные функции----\n\n//Функция генерирует контент игровых карт\n\nfunction getRenderElement(element, Arr, cardPicture, cardShirt) {\n    for (let key of Arr) {\n        element =\n            element +\n            `<div class ='card__items card__items--${cardShirt}'\n                          data-suite=${key[1]}\n                          data-dignity=${key[0]}>\n\n                          ${cardPicture(key, cardShirt)}\n             </div>`;\n    }\n\n    return element;\n}\n// Функция генерирует игральную карту\n\nfunction cardPicture(key, cardShirt) {\n    if (cardShirt === \"open\") {\n        return `<div class =\"card__firstSymbol\">\n                        ${key[0] === \"1\" ? \"10\" : key[0]}\n                    </div>\n                    <div class =\"card__secondSymbol\">\n                        <img src=${suitePict(key[1])}>\n                    </div>\n                    <div class =\"card__thirdSymbol\">\n                        <img src=${suitePict(\n                            key[1]\n                        )} class = 'card__centerPicture'>\n                    </div>\n                    <div class =\"card__fourSymbol \">\n                        <img src=${suitePict(key[1])}>\n                    </div>\n                    <div class =\"card__fiveSymbol\">\n                        ${key[0] === \"1\" ? \"10\" : key[0]}\n                    </div>`;\n    }\n    if (cardShirt === \"close\") {\n        return `<div class =\"card__shirt\">\n                    <img src='img/Рубашка.svg' alt='Трефы'>\n                </div>`;\n    }\n}\n\n// Функция подставляет рисунок масти\n\nfunction suitePict(suite) {\n    let picture = \"\";\n    if (suite === \"s\") {\n        picture = '\"img/Spades.svg\" alt=\"Пики\"';\n        return picture;\n    }\n    if (suite === \"d\") {\n        picture = '\"img/Diamonds.svg\" alt=\"<Бубны>\"';\n        return picture;\n    }\n    if (suite === \"h\") {\n        picture = '\"img/Hearts.svg\" alt=\"Червы\"';\n        return picture;\n    }\n    if (suite === \"c\") {\n        picture = '\"img/Clubs.svg\" alt=\"Трефы\"';\n        return picture;\n    }\n}\n","// Функция получает перетасованную колоду из 36 карт.\n//Создает случайный массив карт в зависимости от уровня и помещает в localStorage\n\nexport function createRandomCardCollection({ levelOfGame }) {\n    let fullCardCollection = [];\n    let gameCardCollection = [];\n    let cardSuite = [\"s\", \"h\", \"d\", \"c\"];\n    let cardDignity = [\"A\", \"K\", \"Q\", \"J\", \"1\", \"9\", \"8\", \"7\", \"6\"];\n\n    for (let suite of cardSuite) {\n        for (let dignity of cardDignity) {\n            fullCardCollection.push(dignity + suite);\n        }\n    }\n    window.localStorage.setItem(\n        \"fullCardCollection\",\n        JSON.stringify(fullCardCollection)\n    );\n\n    shuffle(fullCardCollection);\n    if (levelOfGame === \"1\") fullCardCollection.length = 3;\n    if (levelOfGame === \"2\") fullCardCollection.length = 6;\n    if (levelOfGame === \"3\") fullCardCollection.length = 9;\n\n    gameCardCollection = fullCardCollection.concat(fullCardCollection);\n\n    shuffle(gameCardCollection);\n\n    window.localStorage.setItem(\n        \"gameCardCollection\",\n        JSON.stringify(gameCardCollection)\n    );\n}\n\n// Функция-рандомизатор\n\nfunction shuffle(array) {\n    array.sort(() => Math.random() - 0.5);\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { renderStartPage, renderGamePage } from \"./render.js\";\nimport { createRandomCardCollection } from \"./tools.js\";\nlet contentElement = document.querySelector(\".container\");\nlet levelOfGame;\n//let gameStatus;\n\nwindow.localStorage.removeItem(\"gameStatus\");\n\nrenderStartPage({ contentElement });\n\nlet startButton = document.querySelector(\".select__startbutton\");\n\nstartButton.addEventListener(\"click\", () => {\n    if (startButton.disabled === true) {\n        alert(\"Выберите сложность!\");\n        return;\n    }\n\n    levelOfGame = window.localStorage.getItem(\"level\");\n\n    createRandomCardCollection({ levelOfGame });\n\n    renderGamePage({ contentElement });\n});\n"],"names":[],"sourceRoot":""}